Ext.data.JsonP.mobile_services_push({"guide":"<h1 id='mobile_services_push-section-push-notifications'>Push Notifications</h1>\n<div class='toc'>\n<p><strong>Contents</strong></p>\n<ol>\n<li><a href='#!/guide/mobile_services_push-section-phonegap-%2F-cordova'>PhoneGap / Cordova</a></li>\n<li><a href='#!/guide/mobile_services_push-section-push-notifications-for-azure-mobile-services'>Push Notifications for Azure Mobile Services</a></li>\n<li><a href='#!/guide/mobile_services_push-section-step-1---create-a-windows-azure-mobile-service'>Step 1 - Create a Windows Azure Mobile Service</a></li>\n<li><a href='#!/guide/mobile_services_push-section-step-2---register-your-application'>Step 2 - Register your application</a></li>\n<li><a href='#!/guide/mobile_services_push-section-step-3---configure-push-notifications-in-your-windows-azure-mobile-service'>Step 3 - Configure Push Notifications in your Windows Azure Mobile Service</a></li>\n<li><a href='#!/guide/mobile_services_push-section-step-4---create-server-scripts-for-your-mobile-service-to-send-push-notifications'>Step 4 - Create Server Scripts for your Mobile Service to send Push Notifications</a></li>\n<li><a href='#!/guide/mobile_services_push-section-step-5---configure-your-sencha-touch-application'>Step 5 - Configure your Sencha Touch application</a></li>\n</ol>\n</div>\n\n<p>The <a href=\"#!/api/Ext.azure.Push\" rel=\"Ext.azure.Push\" class=\"docClass\">Ext.azure.Push</a> class provides the necessary functions for you to incorporate Push notifications\ninto your application. This functionality only works in apps packaged with Cordova (currently >= 2.8.x).</p>\n\n<h2 id='mobile_services_push-section-phonegap-%2F-cordova'>PhoneGap / Cordova</h2>\n\n<p><a href=\"#!/api/Ext.azure.Push\" rel=\"Ext.azure.Push\" class=\"docClass\">Ext.azure.Push</a> is a wrapper for the Cordova <a href=\"https://github.com/phonegap-build/PushPlugin\">PushPlugin</a> plugin, and as such, your application is required to be built with Cordova/Phonegap (and <a href=\"http://cordova.apache.org/docs/en/2.8.0/\">cordova.js</a>) included in your project.</p>\n\n<p>The sample Push applications already include the correct platform specific plugin and cordova.js file for you so you can skip this step if you are starting with one of the sample Push applications.</p>\n\n<p>If you're new to PhoneGap / Cordova, be sure to read the <a href=\"http://cordova.apache.org/docs/en/2.8.0/guide_getting-started_index.md.html#Getting%20Started%20Guides\">tutorials</a> available on their website.</p>\n\n<h2 id='mobile_services_push-section-push-notifications-for-azure-mobile-services'>Push Notifications for Azure Mobile Services</h2>\n\n<p>In order for your application to receive push notifications, a server needs to send the notification to the appropriate platform's notification/messaging service that will then send the notification to your device. This is where Windows Azure Mobile Services helps out. Instead of having to set up your own server you can configure a Windows Azure Mobile Service to handle the\nPush notifications for you.</p>\n\n<p>For more general information, please see the guide <a href=\"http://www.windowsazure.com/en-us/develop/mobile/tutorials/get-started-with-push-ios/\">Get started with push notifications in Mobile Services</a> on the Windows Azure website.</p>\n\n<h2 id='mobile_services_push-section-step-1---create-a-windows-azure-mobile-service'>Step 1 - Create a Windows Azure Mobile Service</h2>\n\n<p>From the Windows Azure portal, click 'MOBILE SERVICES' in the left navigation area and then, click 'NEW' in the bottom left corner.</p>\n\n<p><p><img src=\"guides/mobile_services_push/create-new-azure-mobile-service.png\" alt=\"Create New Azure Mobile Service\" width=\"773\" height=\"478\"></p></p>\n\n<p>Follow the steps to create a new Mobile Service.</p>\n\n<h2 id='mobile_services_push-section-step-2---register-your-application'>Step 2 - Register your application</h2>\n\n<p>To send push notifications to applications on users' devices you must register your application with each <a href=\"http://msdn.microsoft.com/en-us/library/windowsazure/jj591526.aspx\">platform's notification/messaging service</a> following their specific steps. Windows Azure currently supports push notifications for iOS, Android and Windows Phone.</p>\n\n<p>Each platform has it's own approach to registering an application in order to receive push notifications; please follow one of the following guides:</p>\n\n<ul>\n<li><a href=\"http://www.windowsazure.com/en-us/develop/mobile/tutorials/get-started-with-push-ios/\">iOS</a> - Follow steps #1-4.</li>\n<li><a href=\"http://www.windowsazure.com/en-us/develop/mobile/tutorials/get-started-with-push-android/\">Android</a> - Follow steps #1 and #2.</li>\n<li>Windows Phone 8 - Not required but does have a 500 message limit per day per device.</li>\n</ul>\n\n\n<p>In each of the above tutorials, you only need to register your application with the relevant authority to enable push notifications on that platform.</p>\n\n<h2 id='mobile_services_push-section-step-3---configure-push-notifications-in-your-windows-azure-mobile-service'>Step 3 - Configure Push Notifications in your Windows Azure Mobile Service</h2>\n\n<p>Go to the Dashboard of you Mobile Service and click on 'Push' at the top.  From here you can enter the info you received for each of the platforms when you registered your application.</p>\n\n<p><p><img src=\"guides/mobile_services_push/azure-mobile-service-push-config.png\" alt=\"Enter Each Platform's required registration information\" width=\"739\" height=\"697\"></p></p>\n\n<h2 id='mobile_services_push-section-step-4---create-server-scripts-for-your-mobile-service-to-send-push-notifications'>Step 4 - Create Server Scripts for your Mobile Service to send Push Notifications</h2>\n\n<p>Once your application has been registered you can then create server scripts that will send <a href=\"http://msdn.microsoft.com/en-us/library/windowsazure/jj631630.aspx\">push notifications</a> to user devices that are running these applications. Each platform has its own push API so refer to the following for more info:</p>\n\n<ul>\n<li>iOS - Use the <a href=\"http://msdn.microsoft.com/en-us/library/windowsazure/jj839711.aspx\">Apple Push Notification Service (APNS)</a></li>\n<li>Android - Use the <a href=\"http://msdn.microsoft.com/en-us/library/windowsazure/dn126137.aspx\">Google Cloud Messaging (GCM)</a></li>\n<li>Windows Phone - Use the <a href=\"http://msdn.microsoft.com/en-us/library/windowsazure/jj871025.aspx\">Microsoft Push Notification Service (MPNS)</a></li>\n</ul>\n\n\n<h3 id='mobile_services_push-section-example-of-initiating-a-push-notification'>Example of initiating a Push Notification</h3>\n\n<pre><code>//\n// iOS Device\n//\nfunction insert(item, user, request) {\n    push.apns.send(device.token, {\n        alert: \"Toast: \" + item.text,\n        payload: {\n            inAppMessage: \"Hey, a new item arrived: \" + item.text\n        },\n    }, {\n        success: function(response) {\n            console.log('SUCCESS sending iOS Push notification: ', response);\n        },\n        error: function(error) {\n            console.log('ERROR sending iOS Push notification: ', error);\n        }\n    });\n}\n\n//\n// Android Device\n//\nfunction insert(item, user, request) {\n    push.gcm.send(device.token, item.text, {\n        success: function(response) {\n           console.log('SUCCESS sending Android Push notification: ', response);\n        },\n        error: function(error) {\n            console.log('ERROR sending Android Push notification: ', error);\n        }\n    });\n}\n\n//\n// Windows Phone\n//\nfunction insert(item, user, request) {\n    push.mpns.sendToast(device.token, {\n        text1: item.text,\n        text2: item.text\n    }, {\n        success: function (response) {\n            console.log('SUCCESS sending WP Toast Push notification: ', response);\n        },\n        error: function(error) {\n            console.log('ERROR sending WP Toast Push notification: ', error);\n        }\n    });\n}\n</code></pre>\n\n<h3 id='mobile_services_push-section-for-more-information-on-how-to-send-push-notifications-from-windows-azure-scripts-refer-to%3A'>For more information on how to send Push notifications from Windows Azure Scripts refer to:</h3>\n\n<ul>\n<li><a href=\"http://msdn.microsoft.com/en-us/library/windowsazure/jj631630.aspx\">How to send push notifications</a></li>\n<li><a href=\"http://msdn.microsoft.com/en-us/library/windowsazure/jj554217.aspx\">push object</a></li>\n<li><a href=\"http://msdn.microsoft.com/en-us/library/windowsazure/jj927170.aspx\">Azure Service Bus Notification Hubs</a></li>\n</ul>\n\n\n<h2 id='mobile_services_push-section-step-5---configure-your-sencha-touch-application'>Step 5 - Configure your Sencha Touch application</h2>\n\n<p>After you have registered and configured your device and created server scripts you can enable Push Notifications in your Sencha Touch app.</p>\n\n<h3 id='mobile_services_push-section-configure-ext.azure'>Configure Ext.Azure</h3>\n\n<p>Following the example configuration outlined in the <a href=\"/#!/guide/configuration\">Configuring Azure</a> guide, you can add push cability to your application by including the <a href=\"#!/api/Ext.Azure-cfg-pushConfig\">pushConfig</a> property to the <a href=\"#!/api/Ext.Azure-method-init\" rel=\"Ext.Azure-method-init\" class=\"docClass\">Ext.Azure.init</a> configuration object.</p>\n\n<p>Here we have an example of an applicaton which has push services configured for it:</p>\n\n<pre><code>Ext.application({\n    name : 'MyApp',\n\n    requires : [\n        '<a href=\"#!/api/Ext.Azure\" rel=\"Ext.Azure\" class=\"docClass\">Ext.azure.Azure</a>'\n    ],\n\n    azure : {\n        appKey : 'YOUR_APP_KEY',\n        appUrl : 'YOUR_APP_URL',\n\n        pushConfig : {\n            windowsphone : 'channel_name',\n            android      : 'sender_id'\n            ios          : true\n        }\n    },\n\n    //...\n\n    launch: function() {\n\n        <a href=\"#!/api/Ext.Azure-method-init\" rel=\"Ext.Azure-method-init\" class=\"docClass\">Ext.Azure.init</a>(this.config.azure);\n\n    }\n});\n</code></pre>\n\n<h3 id='mobile_services_push-section-event-handling'>Event Handling</h3>\n\n<p>When configured with push notifications, the Azure package is capable of responding to two different push events: <strong>pushregistrationsuccess</strong> and <strong>pushnotification</strong>.</p>\n\n<p>You may choose how to handle these events by listening for them and inspecting the <strong>event</strong> parameter passed to the listening function. A very simple example of how to listen for, and react to these events is shown as follows:</p>\n\n<pre><code>Ext.Azure.on({\n    scope                       : this,\n    'pushregistrationsuccess'   : this.onPushRegistrationSuccess,\n    'pushnotification'          : this.onPushNotification\n});\n\n//...\n\nonPushNotification : function(event) {\n    Ext.Msg.alert('Notification', event.message);\n},\n</code></pre>\n\n<p>More information on configuration parameters and events can be found in the <a href=\"#!/api/Ext.azure.Push\" rel=\"Ext.azure.Push\" class=\"docClass\">Ext.azure.Push</a> API documentation.</p>\n\n<p>A more detailed and complete implementation of handling push notification events can be found by reviewing the source code in the Push Notification example provided in this SDK.</p>\n","title":"Push Notifications"});